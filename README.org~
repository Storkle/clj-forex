Why do we need another programming language when we have mql4/mql5 in forex?


It has long been known that functional programming makes one more productive than statically typed languages such as c#,c++, and java. However, for years metatrader, a free,popular forex trading platform, has been limited to a proprietary language mql4 and soon to be mql5. This causes problems - first, the language appears to have evolved too slowly (its basically a c clone with less power and more focus to forex), and it is way to specific. It does not support general programming such as database access, neural networks, genetic programming, etc (accept via dll calls).

Enter clojure. Easy access to any java library. Dynamic, meaning you can instantly test any function. This is extremely advantageous compared to a static language, but is even more advantageous over mql4 because debugging there is horrible - (maybe it will be remedied in mql5?) Clojure is also a lisp, which means it can be made into a domain specific language which will potentially allow it to be more convenient than the static 'domain specific' mql language.

In order to achieve this we can write server code in mql which will allow us to access all mql features. In terms of speed, clojure+sockets is plenty fast - all we technically need is the latest close price and the ability to open/close trades. Everything else can be stored in a database and indicators can be calculated clojure side using the stored price data. Of course, it is perfectly possible to query metatrader for custom indicator data, and one can hash it if one knows that it doesn't overwrite previos data.


Path to Development

At this point, i would like to augment my manual trading with some code which will check to see if the manual conditions for a trade are met, and if so, email me at the end of the day (5:00). I would also like an ea which closes out trades based on certain indicators, or enters a trade which i have set up (channel trade) so I don't constantly have to be at the computer. 

It will be divided into separate 'modules' - 
server
error handling and logging(power outage, lost internet, etc)
indicator/database 
ea /ea handler

At the end of the day, all I want to do is write my conditions for a trade, 'enter' the ea into the ea handler, and then forget about it all while the ea runs forever. 

Using
TODO