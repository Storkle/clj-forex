* What is clj-forex?
Clj forex is an in progress effort to create a non-graphical backend to various forex backends. Right now Metatrader is the focus. 
The ultimate goal of clj-forex is to create a robust library to allow the creation of EA (expert advisors) in the scripting language clojure. Indicators
will be calculated java side using price bars retrieved from the backends. Integration of indicator data to the various gui backends (atleast for debugging purposes initially) 
will be supported.
The only purpose of the forex backend is to allow access to spreads, current price, ability to buy/sell, etc. The next planned backend is FXCMs .NET API so that eas
can run on micro accounts!

* The Difference
Im not sure why noone has done this before, but integration of a scripting language to create eas is, in my opinion, vital. Integration of a lisp-like
dialect, like clojure, will allow much more rapid creation and prototyping of eas. This combined with easy access to any java library (clojure is implemented
on the java virtual machine) makes for a winning combination! Things like neural networks, and other such 'advanced' concepts can now be much more easily
integrated.

Its like an artist! Give an artist more efficient tools in the toolbox and who knows what can be created! 
[And clojure is fun to learn anyways!]

* Status
Currently there is no release. Once i feel that it is stable and relatively feature complete, I will place the code on clojars and update this README so that
you no longer see this sentence! Until then - plans are

+ Indicator calculate on java side
+ Automatic parsing of metatrader indicators to java
+ Ability to view indicator in metatrader
+ FXCM .NET backend
+ EA framework with fault tolerance to internet disconnects.
  + Ability to 'recover' orders
  + hedging emulation 
+ EA Backtesting (visual?)
+ Comprehensive Unit Tests
+ Large demo ea (i.e. ea that im planning on building for my agi research)

